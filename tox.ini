[tox]
skipsdist = True
minversion = 3.9.0
envlist =
    py{39,310,311,312,313}
    flake8,
    ruff,
    mypy,
runner = virtualenv # TODO: switch to uv (tox-uv plugin)

[testenv]
setenv =
    PYTHONDONTWRITEBYTECODE=1
deps = -rdev-requirements.txt
package = editable
commands =
    coverage run -m unittest discover -v ./tests
    # ext/dapr-ext-workflow uses pytest-based tests
    coverage run -a -m pytest -q ext/dapr-ext-workflow/tests
    coverage run -a -m unittest discover -v ./ext/dapr-ext-grpc/tests
    coverage run -a -m unittest discover -v ./ext/dapr-ext-fastapi/tests
    coverage run -a -m unittest discover -v ./ext/flask_dapr/tests
    coverage xml
commands_pre =
    # TODO: remove this before merging (after durable task is merged)
    {envpython} -m pip install -e {toxinidir}/../durabletask-python/
    
    {envpython} -m pip install -e {toxinidir}/
    {envpython} -m pip install -e {toxinidir}/ext/dapr-ext-workflow/
    {envpython} -m pip install -e {toxinidir}/ext/dapr-ext-grpc/
    {envpython} -m pip install -e {toxinidir}/ext/dapr-ext-fastapi/
    {envpython} -m pip install -e {toxinidir}/ext/flask_dapr/    
# allow for overriding sidecar ports
pass_env = DAPR_GRPC_ENDPOINT,DAPR_HTTP_ENDPOINT,DAPR_RUNTIME_HOST,DAPR_GRPC_PORT,DAPR_HTTP_PORT,DURABLETASK_GRPC_ENDPOINT

[flake8]
extend-exclude = .tox,venv,build,dist,dapr/proto,examples/**/.venv
ignore = E203,E501,W503,E701,E704,F821
max-line-length = 100

[testenv:flake8]
basepython = python3
usedevelop = False
deps = 
    flake8==7.3.0
    pip
commands =
    flake8 . --config={toxinidir}/tox.ini

[testenv:ruff]
basepython = python3
usedevelop = False
deps = 
    ruff==0.2.2 # TODO: upgrade to 0.13.3
    pip
commands =
    ruff check --select I --fix
    ruff format

[testenv:examples]
passenv = HOME
basepython = python3
changedir = ./examples/
deps =
    mechanical-markdown
commands =
    ./validate.sh conversation
    ./validate.sh crypto
    ./validate.sh metadata
    ./validate.sh error_handling
    ./validate.sh pubsub-simple
    ./validate.sh pubsub-streaming
    ./validate.sh pubsub-streaming-async
    ./validate.sh state_store
    ./validate.sh state_store_query
    ./validate.sh secret_store
    ./validate.sh invoke-simple
    ./validate.sh invoke-custom-data
    ./validate.sh demo_actor
    ./validate.sh invoke-binding
    ./validate.sh grpc_proxying
    ./validate.sh w3c-tracing
    ./validate.sh distributed_lock
    ./validate.sh configuration
    ./validate.sh demo_workflow
    ./validate.sh workflow
    ./validate.sh jobs
    ./validate.sh ../
commands_pre =
    # TODO: remove this before merging (after durable task is merged)
    pip3 install -e {toxinidir}/../durabletask-python/
    pip3 install -e {toxinidir}/
    pip3 install -e {toxinidir}/ext/dapr-ext-workflow/
    pip3 install -e {toxinidir}/ext/dapr-ext-grpc/
    pip3 install -e {toxinidir}/ext/dapr-ext-fastapi/
allowlist_externals=*

[testenv:example-component]
; This environment is used to validate a specific example component.
; Usage: tox -e example-component -- component_name
; Example: tox -e example-component -- conversation
passenv = HOME
basepython = python3
changedir = ./examples/
deps =
    mechanical-markdown
commands =
    ./validate.sh {posargs}

commands_pre =
    pip3 install -e {toxinidir}/
    pip3 install -e {toxinidir}/ext/dapr-ext-workflow/
    pip3 install -e {toxinidir}/ext/dapr-ext-grpc/
    pip3 install -e {toxinidir}/ext/dapr-ext-fastapi/
allowlist_externals=*

[testenv:type]
basepython = python3
usedevelop = False
deps = -rdev-requirements.txt
commands =
    mypy --config-file mypy.ini
commands_pre =
    # TODO: remove this before merging (after durable task is merged)
    pip3 install -e {toxinidir}/../durabletask-python/
    pip3 install -e {toxinidir}/
    pip3 install -e {toxinidir}/ext/dapr-ext-workflow/
    pip3 install -e {toxinidir}/ext/dapr-ext-grpc/
    pip3 install -e {toxinidir}/ext/dapr-ext-fastapi/

[testenv:doc]
basepython = python3
usedevelop = False
allowlist_externals = make
deps = sphinx
commands =
    sphinx-apidoc -E -o docs/actor dapr/actor
    sphinx-apidoc -E -o docs/clients dapr/clients
    sphinx-apidoc -E -o docs/proto dapr/proto
    sphinx-apidoc -E -o docs/serializers dapr/serializers
    make html -C docs
