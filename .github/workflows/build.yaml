name: dapr-python

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master
      - release-*

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHON_VER: 3.7
      TWINE_USERNAME: "__token__"
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ env.PYTHON_VER }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VER }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine tox
    - name: Run Linter
      run: |
        tox -e flake8
    - name: Check Typing
      run: |
        tox -e type
    - name: Run unit-tests
      run: |
        tox -e py37
    - name: Upload test coverage
      uses: codecov/codecov-action@v2.0.2
    - name: Build and publish Dapr Python SDK
      if: github.event_name != 'pull_request'
      env:
        TWINE_PASSWORD: ${{ secrets.PYPI_UPLOAD_PASS }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
    - name: Build and publish Dapr Flask Extension
      if: github.event_name != 'pull_request'
      env:
        TWINE_PASSWORD: ${{ secrets.PYPI_UPLOAD_PASS }}
      run: |
        cd ext/flask_dapr
        python setup.py sdist bdist_wheel
        twine upload dist/*
    - name: Build and publish dapr-ext-grpc
      if: github.event_name != 'pull_request'
      env:
        TWINE_PASSWORD: ${{ secrets.PYPI_UPLOAD_PASS }}
      run: |
        cd ext/dapr-ext-grpc
        python setup.py sdist bdist_wheel
        twine upload dist/*
    - name: Build and publish dapr-ext-fastapi
      if: github.event_name != 'pull_request'
      env:
        TWINE_PASSWORD: ${{ secrets.PYPI_UPLOAD_PASS }}
      run: |
        cd ext/dapr-ext-fastapi
        python setup.py sdist bdist_wheel
        twine upload dist/*
